/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import accesoDeDatos.InscripcionData;
import entidades.*;
import java.util.AbstractMap.SimpleEntry;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lucap
 */
public class ManipulacionNotas extends javax.swing.JInternalFrame {

  private final DefaultTableModel model;
  private final InscripcionData inscripcionData;
  private List<SimpleEntry<Inscripcion, Boolean>> inscripciones;

  /**
   * Creates new form ManipulacionNotas
   *
   * @param inscripcionData
   */
  public ManipulacionNotas(InscripcionData inscripcionData) {
    this.model = new DefaultTableModel() {
      @Override
      public boolean isCellEditable(int row, int column) {
        return column == getColumnCount() - 1;
      }
    };
    this.inscripcionData = inscripcionData;
    initComponents();
    initTabla();
    initBtn();
    model.addTableModelListener(e -> habilitarGuardar(e));
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    formularioDeInscripcion = new javax.swing.JPanel();
    jLabel2 = new javax.swing.JLabel();
    jSeparator1 = new javax.swing.JSeparator();
    jLabel1 = new javax.swing.JLabel();
    alumnos = new javax.swing.JComboBox<>();
    jPanel1 = new javax.swing.JPanel();
    jScrollPane1 = new javax.swing.JScrollPane();
    tabla = new javax.swing.JTable();
    jPanel2 = new javax.swing.JPanel();
    guardarBtn = new javax.swing.JButton();

    setClosable(true);

    jLabel2.setFont(new java.awt.Font("Georgia", 1, 24)); // NOI18N
    jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel2.setText("Carga de notas");

    jLabel1.setText("Seleccione un alumno:");

    alumnos.setModel(new javax.swing.DefaultComboBoxModel<>(new accesoDeDatos.AlumnoData().listarAlumnos().toArray(new entidades.Alumno[0])));
    alumnos.addItemListener(new java.awt.event.ItemListener() {
      public void itemStateChanged(java.awt.event.ItemEvent evt) {
        alumnosItemStateChanged(evt);
      }
    });

    javax.swing.GroupLayout formularioDeInscripcionLayout = new javax.swing.GroupLayout(formularioDeInscripcion);
    formularioDeInscripcion.setLayout(formularioDeInscripcionLayout);
    formularioDeInscripcionLayout.setHorizontalGroup(
      formularioDeInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(formularioDeInscripcionLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(formularioDeInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
          .addGroup(formularioDeInscripcionLayout.createSequentialGroup()
            .addGap(25, 25, 25)
            .addComponent(jLabel1)
            .addGap(60, 60, 60)
            .addComponent(alumnos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGap(25, 25, 25)))
        .addContainerGap())
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formularioDeInscripcionLayout.createSequentialGroup()
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(jLabel2)
        .addGap(146, 146, 146))
    );
    formularioDeInscripcionLayout.setVerticalGroup(
      formularioDeInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(formularioDeInscripcionLayout.createSequentialGroup()
        .addGap(9, 9, 9)
        .addComponent(jLabel2)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addGroup(formularioDeInscripcionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel1)
          .addComponent(alumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    tabla.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null}
      },
      new String [] {
        "Title 1", "Title 2", "Title 3", "Title 4"
      }
    ));
    jScrollPane1.setViewportView(tabla);

    guardarBtn.setText("Guardar");
    guardarBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        guardarBtnActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(guardarBtn)
        .addContainerGap())
    );
    jPanel2Layout.setVerticalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel2Layout.createSequentialGroup()
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(guardarBtn)
        .addContainerGap())
    );

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(formularioDeInscripcion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(4, 4, 4)
        .addComponent(formularioDeInscripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(3, 3, 3))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void alumnosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_alumnosItemStateChanged
    llenarTabla(inscripcionesDeAlumno(alumnoSeleccionado()));
    initBtn();
  }//GEN-LAST:event_alumnosItemStateChanged

  private void guardarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarBtnActionPerformed
    inscripciones.forEach(inscripcion -> {
      if (inscripcion.getValue()) {
        inscripcionData.actualizarNota(inscripcion.getKey().getAlumno().getIdAlumno(),
                inscripcion.getKey().getMateria().getIdMateria(),
                obtenerNota(inscripciones.indexOf(inscripcion)));
        inscripcion.setValue(Boolean.FALSE);
      }
    });
    JOptionPane.showMessageDialog(null, "Se actualizaron las notas correctamente!");
    initBtn();
  }//GEN-LAST:event_guardarBtnActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JComboBox<entidades.Alumno> alumnos;
  private javax.swing.JPanel formularioDeInscripcion;
  private javax.swing.JButton guardarBtn;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JSeparator jSeparator1;
  private javax.swing.JTable tabla;
  // End of variables declaration//GEN-END:variables

  private void llenarTabla(List<Inscripcion> inscripciones) {
    limpiarTabla();
    this.inscripciones = new ArrayList<>();
    inscripciones.forEach(inscripcion -> {
      this.inscripciones.add(new SimpleEntry<>(inscripcion, Boolean.FALSE));
      model.addRow(inscripcion.getData());
    });
  }

  private List<Inscripcion> inscripcionesDeAlumno(Alumno alumno) {
    return inscripcionData.obtenerInscripcionesPorAlumno(alumno.getIdAlumno());
  }

  private void limpiarTabla() {
    model.setRowCount(0);
  }

  private void initTabla() {
    model.addColumn("Codigo");
    model.addColumn("Nombre");
    model.addColumn("Nota");
    tabla.setModel(model);
    llenarTabla(inscripcionesDeAlumno(alumnoSeleccionado()));
  }

  private Alumno alumnoSeleccionado() {
    return alumnos.getItemAt(alumnos.getSelectedIndex());
  }

  private void initBtn() {
    guardarBtn.setEnabled(false);
  }

  private void habilitarGuardar(TableModelEvent evt) {
    if (evt.getType() == TableModelEvent.UPDATE && notaModificada(evt.getFirstRow())) {
      guardarBtn.setEnabled(true);
      inscripciones.get(evt.getFirstRow()).setValue(Boolean.TRUE);
    }
  }

  private boolean notaModificada(int row) {
    int nuevaNota = -1;
    int nota = inscripciones.get(row).getKey().getNota();
    try {
      nuevaNota = obtenerNota(row);
      if (nuevaNota < 0 || 10 < nuevaNota) {
        throw new NumberFormatException();
      }
    } catch (NumberFormatException e) {
      JOptionPane.showMessageDialog(null, "Ingrese una nota valida! (0-10)\nSolo numero enteros.");
      model.setValueAt(nota, row, 2);
      return false;
    }
    return nota != nuevaNota;
  }

  private int obtenerNota(int row) {
    return Integer.parseInt(model.getValueAt(row, 2).toString());
  }

}
